/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package consultas;

import controlMySQL.MySqlConn;
import java.awt.Color;
import java.awt.Graphics;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Ernesto CH
 */
public class ConsultaGrafica extends javax.swing.JPanel {
    MySqlConn conn = new MySqlConn();
    /**
     * Creates new form ConsultaGrafica
     */
    public ConsultaGrafica() {
        initComponents();
    }
    boolean band = false;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonGrafica = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel1.setText("Grafica Disponibilidad");

        jButtonGrafica.setText("Ver Grafica");
        jButtonGrafica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGraficaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
            .addGroup(layout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(jButtonGrafica)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 356, Short.MAX_VALUE)
                .addComponent(jButtonGrafica)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGraficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGraficaActionPerformed
        band = true;
        repaint();
    }//GEN-LAST:event_jButtonGraficaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGrafica;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    public void paint(Graphics g){
        super.paint(g);
        if(band == true){
            int nodisponible = 0,disponible=0,total;
            String ocupado;
            String di,nd;
            try {
                String query = "Select * From habitaciones";
                Statement st;
                ResultSet resultados ;
                st = this.conn.conn.createStatement();
                resultados = st.executeQuery(query);
                while(resultados.next()){
                   ocupado =  resultados.getString("Ocupado");
                   if(ocupado.equals("1")){
                       nodisponible++;
                   }else{
                       disponible++;
                   }
                }
                total = disponible+nodisponible;
                
                int d = disponible*100/total;
                int n = nodisponible*100/total;
                
                di = String.valueOf(d);
                nd = String.valueOf(n);
                
                int gradodisponible = disponible*360/total;
                int gradonodisponible = nodisponible*360/total;
                
                g.setColor(Color.red);
                g.fillArc(25,80,200,200,0,gradodisponible);
                g.fillRect(250, 120,20,20);
                g.drawString("Disponible",275,135);
                g.drawString(di + " %",360,135);
                
                g.setColor(Color.DARK_GRAY);
                g.fillArc(25,80,200,200,gradodisponible,gradonodisponible);
                g.fillRect(250,150,20,20);
                g.drawString("No Disponible",275,165);
                g.drawString(nd + " %", 360, 165);
                
            } catch (SQLException ex) {
                Logger.getLogger(ConsultaGrafica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
